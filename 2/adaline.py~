import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.colors import ListedColormap
class AdalineGD(object):
	"""ADAptive LInear NEuron
	
	parameter
	------------
	eta : float
	n_iter : int
	
	attribute
	-----------
	w_ : array
	errors_ : list
	"""
	def __init__(self, eta=0.01, n_iter=50):
		self.eta = eta
		self.n_iter = n_iter
	
	def fit(self, X, y):
		"""fit to traning data
		parameter
		-----------------
		x : {array}, shape = [n_samples, n_features]
		y : array, shape = [n_samples]
		
		return
		---------
		self : object
		"""
		self.w_ = np.zeros(1 + X.shape[1])
		self.cost_ = []
		for i in range(self.n_iter):
			output = self.activation(X)
			errors = (y - output)
			self.w_[1:] += self.eta * X.T.dot(errors)
			self.w_[0] += self.eta * errors.sum()
			cost = (errors ** 2).sum() / 2.0
			self.cost_.append(cost)
			errors2 = (y - self.predict(X))
			print len(errors2[errors2 != 0])
		return self
	def net_input(self,X):
		return np.dot(X, self.w_[1:]) + self.w_[0]
	
	def activation(self, X):
		return self.net_input(X)
	
	def predict(self, X):
		return np.where(self.activation(X) >= 0.0, 1, -1)



